/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studgui;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Collection;
import java.util.Scanner;
import java.util.SortedMap;
import java.util.TreeMap;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import studcore.Quoter;
import studcore.Scheduler;
import utilities.MyDate;

/**
 *
 * @author Lukas
 */
public class StudsGUI extends javax.swing.JFrame {

    private Scheduler sc;
    private Collection<String> evntCol;
    private SortedMap<Integer, String> remMap;
    private int week;

    /**
     * Creates new form GUI
     */
    public StudsGUI() {
        initComponents();
        sc = new Scheduler();
        sc.loadEvents();

        remMap = new TreeMap<>();
        evntCol = sc.getEvents();
        week = 0;
        showEventList();
        loadLastWeek();
        jakiesGowno();

    }

        public void jakiesGowno() {
            int f;
        int x = 0;
        int y = 1;
        int z = 1;
        System.out.println(x);
        System.out.println(y);
        while (z <= 15) {
            f = x + y;
            x = y;
            y = f;
            if (f / 2 == 0) {
                System.out.println(f);
            }
            z = z +1;
        }
    }
    
    
    private int getWeek() {
        System.out.println("" + week);
        return week;
    }

    private void loadLastWeek() {
        File aFile = new File("week.txt");
        BufferedReader bfr = null;
        String cl;
        try {
            Scanner ls;
            bfr = new BufferedReader(new FileReader(aFile));
            String currentLine = bfr.readLine();

            while (currentLine != null) {
                ls = new Scanner(currentLine);
                cl = ls.next();
                week = Integer.parseInt(cl);
                currentLine = bfr.readLine();
            }

        } catch (Exception e) {
            System.out.println("Error: " + e);
        } finally {
            try {
                bfr.close();
            } catch (IOException ex) {
                Logger.getLogger(StudsGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void updateWeek(String w) {
        File aFile = new File("week.txt");
        BufferedWriter bfw = null;
        try {
            bfw = new BufferedWriter(new FileWriter(aFile));
            bfw.write(w);
            bfw.newLine();
        } catch (Exception anException) {
            System.out.println("Error: " + anException);
        } finally {
            try {
                bfw.close();
            } catch (Exception anException) {
                System.out.println("Error: " + anException);
            }
        }

    }

    /**
     *
     */
    private void showEventList() {
        for (String gs : remMap.values()) {
            if (evntCol.contains(gs)) {
                evntCol.remove(gs);
            }
        }
        eventsList.setListData(evntCol);
    }

    /**
     * This method is called from within the constructor to initiates the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        aClock = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        reqTimeField = new javax.swing.JLabel();
        eTime = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        quoteArea = new javax.swing.JTextArea();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        progressBar = new javax.swing.JProgressBar();
        remainingDaysField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        eventsList = new m256gui.M256JList();
        jPanel3 = new javax.swing.JPanel();
        evtType = new javax.swing.JTextField();
        timeField = new javax.swing.JTextField();
        aDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        modCode = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        addEventButton = new javax.swing.JButton();
        setTimeButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        clearDataButton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(50, 48, 48));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.darkGray);
        setSize(jTabbedPane1.getMaximumSize());

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102), new java.awt.Color(51, 51, 51)));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setOpaque(true);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jPanel2, org.jdesktop.beansbinding.ELProperty.create("${background}"), jTabbedPane1, org.jdesktop.beansbinding.BeanProperty.create("background"));
        bindingGroup.addBinding(binding);

        jPanel2.setBackground(new java.awt.Color(46, 45, 45));
        jPanel2.setForeground(new java.awt.Color(46, 45, 45));

        aClock.setBackground(new java.awt.Color(255, 255, 255));
        aClock.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        aClock.setForeground(new java.awt.Color(255, 255, 255));
        aClock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        aClock.setText("00:00:00");
        aClock.setDoubleBuffered(true);
        aClock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        startButton.setBackground(new java.awt.Color(0, 102, 204));
        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setBackground(new java.awt.Color(255, 51, 0));
        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        reqTimeField.setBackground(new java.awt.Color(204, 255, 255));
        reqTimeField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        reqTimeField.setForeground(new java.awt.Color(255, 255, 255));
        reqTimeField.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reqTimeField.setText("0");
        reqTimeField.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        reqTimeField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                reqTimeFieldPropertyChange(evt);
            }
        });

        eTime.setBackground(new java.awt.Color(204, 255, 255));
        eTime.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        eTime.setForeground(new java.awt.Color(255, 255, 255));
        eTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eTime.setText("00:00:00");
        eTime.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        quoteArea.setEditable(false);
        quoteArea.setBackground(new java.awt.Color(163, 144, 94));
        quoteArea.setColumns(20);
        quoteArea.setFont(new java.awt.Font("Footlight MT Light", 0, 24)); // NOI18N
        quoteArea.setForeground(new java.awt.Color(0, 0, 0));
        quoteArea.setLineWrap(true);
        quoteArea.setRows(5);
        quoteArea.setToolTipText("");
        quoteArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(quoteArea);

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(61, 60, 60));
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setText("Required Time");

        jTextField3.setEditable(false);
        jTextField3.setBackground(new java.awt.Color(72, 70, 70));
        jTextField3.setForeground(new java.awt.Color(255, 255, 255));
        jTextField3.setText("Elapsed Time");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        progressBar.setBackground(new java.awt.Color(0, 255, 0));
        progressBar.setForeground(new java.awt.Color(0, 0, 0));
        progressBar.setBorder(null);
        progressBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        progressBar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                progressBarPropertyChange(evt);
            }
        });

        remainingDaysField.setBackground(new java.awt.Color(51, 51, 51));
        remainingDaysField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        remainingDaysField.setForeground(new java.awt.Color(0, 0, 0));
        remainingDaysField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        remainingDaysField.setText("dd days");
        remainingDaysField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remainingDaysFieldActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("days remaining to");

        eventsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        eventsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                eventsListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(eventsList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eTime, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reqTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(296, 296, 296)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(aClock, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(298, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(remainingDaysField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aClock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eTime, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reqTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(remainingDaysField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(62, 62, 62))
        );

        jTabbedPane1.addTab("Activity", jPanel2);

        jPanel3.setBackground(new java.awt.Color(46, 45, 45));
        jPanel3.setForeground(new java.awt.Color(46, 45, 45));

        evtType.setBackground(new java.awt.Color(153, 153, 153));
        evtType.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        timeField.setBackground(new java.awt.Color(153, 153, 153));
        timeField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        timeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeFieldActionPerformed(evt);
            }
        });

        aDate.setBackground(new java.awt.Color(153, 153, 153));
        aDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Type");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Date");
        jLabel6.setPreferredSize(new java.awt.Dimension(33, 17));

        modCode.setBackground(new java.awt.Color(153, 153, 153));
        modCode.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Module");

        addEventButton.setBackground(new java.awt.Color(0, 102, 204));
        addEventButton.setForeground(new java.awt.Color(0, 0, 0));
        addEventButton.setText("Add Event");
        addEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEventButtonActionPerformed(evt);
            }
        });

        setTimeButton.setBackground(new java.awt.Color(0, 102, 204));
        setTimeButton.setForeground(new java.awt.Color(0, 0, 0));
        setTimeButton.setText("Set required time");
        setTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setTimeButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Time");

        clearDataButton.setBackground(new java.awt.Color(255, 51, 0));
        clearDataButton.setText("Clear Data");
        clearDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearDataButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setTimeButton))
                .addGap(50, 50, 50)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modCode, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(evtType, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(aDate, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(175, 175, 175)
                .addComponent(clearDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(233, 233, 233))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(129, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(modCode, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(evtType, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(aDate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addEventButton))
                .addGap(40, 40, 40)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setTimeButton)
                    .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(116, 116, 116)
                .addComponent(clearDataButton)
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("Settings", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 866, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_startButtonActionPerformed
    {//GEN-HEADEREND:event_startButtonActionPerformed

        int i = 1;
        sc.start();
        getRequiredStudyTime();
        updateRequiredTime();
        Quoter q = new Quoter();
        quoteArea.setText(q.getQuote());
        eTime.setText(sc.loadElapsedTime());
        new Thread() {
            @Override
            public void run() {
                while (i == 1) {
                    aClock.setText(sc.getCurrentTime());
                    updateProgressBar();
                }
            }
        }.start();
    }//GEN-LAST:event_startButtonActionPerformed

    /**
     *
     */
    private void updateDate() {
        MyDate md = new MyDate();
        md.getCurrentDate();
        md.setDate("02/09/16");
        md.calcDateDiff(md.getD2(), md.getD1(), TimeUnit.DAYS);
        md.getDateDifference();
    }

    /**
     *
     */
    private void updateProgressBar() {
        int p;
        Scanner s = new Scanner(eTime.getText());
        s.useDelimiter(":");
        String g = s.next();
        p = Integer.parseInt(g);
        int t = Integer.parseInt(reqTimeField.getText()) - p;
        progressBar.setMinimum(0);
        progressBar.setMaximum(Integer.parseInt(reqTimeField.getText()));
        progressBar.setValue(t);
        progressBar.setString("" + t + " more hours required");
        progressBar.setStringPainted(true);
    }

    /**
     *
     */
    private void getRequiredStudyTime() {
        reqTimeField.setText("" + sc.calculateProgress());
    }

    /**
     *
     *
     * @param evt
     */
    private void showRemainingDays() {
        String mc, et, d, inputDate;
        String value = (String) eventsList.getSelectedValue();
        Scanner scan;

        if (eventsList.getSelectedValue() != null) {
            scan = new Scanner(value);
        } else {
            scan = new Scanner("MC " + "ET " + "01/01/2017");
        }

        scan.useDelimiter(" ");
        mc = scan.next();
        et = scan.next();
        d = scan.next();

        MyDate md = new MyDate();
        md.getCurrentDate();
        md.setDate(d);
        md.calcDateDiff(md.getD2(), md.getD1(), TimeUnit.DAYS);
        md.getDateDifference();

        inputDate = "" + md.getDateDifference();
        int i = Integer.parseInt(inputDate);
        remainingDaysField.setText(inputDate);
        if (i < 0) {
            remMap.put(i, value);
        }
        if (i > 30) {
            remainingDaysField.setBackground(Color.green);
        } else if (i < 30 && i > 15) {
            remainingDaysField.setBackground(Color.yellow);
        } else {
            remainingDaysField.setBackground(Color.red);
        }
        for (String st : remMap.values()) {
            sc.removeEvent(st);
        }
        showEventList();
    }

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_stopButtonActionPerformed
    {//GEN-HEADEREND:event_stopButtonActionPerformed
        sc.stop();
        aClock.setText("00:00:00");
    }//GEN-LAST:event_stopButtonActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextField3ActionPerformed
    {//GEN-HEADEREND:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void progressBarPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_progressBarPropertyChange
    {//GEN-HEADEREND:event_progressBarPropertyChange


    }//GEN-LAST:event_progressBarPropertyChange

    private void timeFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_timeFieldActionPerformed
    {//GEN-HEADEREND:event_timeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeFieldActionPerformed

    private void addEventButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addEventButtonActionPerformed
    {//GEN-HEADEREND:event_addEventButtonActionPerformed

        String mc, et, da;
        mc = modCode.getText();
        et = evtType.getText();
        da = aDate.getText();
        if ((mc != null) && (et != null) && (da != null)) {
            sc.saveNewEvent(mc, et, da);
        }
        modCode.setText("");
        evtType.setText("");
        aDate.setText("");
        showEventList();

    }//GEN-LAST:event_addEventButtonActionPerformed

    private void setTimeButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setTimeButtonActionPerformed
    {//GEN-HEADEREND:event_setTimeButtonActionPerformed
        String s = timeField.getText();

        File aFile = new File("reqTime.txt");
        BufferedWriter bfw = null;

        try {
            bfw = new BufferedWriter(new FileWriter(aFile));
            bfw.write(s);
            bfw.newLine();
        } catch (Exception anException) {
            System.out.println("Err: " + anException);
        } finally {
            try {
                bfw.close();
            } catch (Exception anException) {
                System.out.println("Error: " + anException);
            }
        }
        sc.stop();
        reqTimeField.setText(s);
        timeField.setText("");
    }//GEN-LAST:event_setTimeButtonActionPerformed

    private int getRequiredTime() {
        File aFile = new File("reqTime.txt");
        BufferedReader bfr = null;
        String cl;
        int rt = 0;
        try {
            Scanner ls;
            bfr = new BufferedReader(new FileReader(aFile));
            String currentLine = bfr.readLine();

            while (currentLine != null) {
                ls = new Scanner(currentLine);
                cl = ls.next();
                rt = Integer.parseInt(cl);
                currentLine = bfr.readLine();
            }

        } catch (Exception e) {
            System.out.println("Error: " + e);
        } finally {
            try {
                bfr.close();
            } catch (IOException ex) {
                Logger.getLogger(StudsGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return rt;
    }

    private void updateRequiredTime() {
        String at = reqTimeField.getText();
        int n = 7;
        int tr = getRequiredTime();
        int pr = Integer.parseInt(at);
        int ut = tr;
        MyDate md = new MyDate();
        md.getCurrentDate();
        md.setDate("01/10/16");
        md.calcDateDiff(md.getD1(), md.getD2(), TimeUnit.DAYS);
        int dd = md.getDateDifference();
        int weeks = dd / n;
        if (weeks > week) {
            ut = (weeks - week) * tr + pr;
        }
        reqTimeField.setText("" + ut);
        

    }

    private void reqTimeFieldPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_reqTimeFieldPropertyChange
    {//GEN-HEADEREND:event_reqTimeFieldPropertyChange

    }//GEN-LAST:event_reqTimeFieldPropertyChange

    private void clearDataButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearDataButtonActionPerformed
    {//GEN-HEADEREND:event_clearDataButtonActionPerformed
        File req = new File("reqTime.txt");
        File evnt = new File("events.txt");
        File time = new File("time.txt");
        BufferedWriter rw = null;
        BufferedWriter ew;
        BufferedWriter tw;

        try {
            rw = new BufferedWriter(new FileWriter(req));
            rw.write("0");
            ew = new BufferedWriter(new FileWriter(evnt));
            ew.write("");
            tw = new BufferedWriter(new FileWriter(time));
            tw.write("");
        } catch (Exception anException) {
            System.out.println("Error: " + anException);
        } finally {
            try {
                rw.close();
            } catch (Exception anException) {
                System.out.println("Error: " + anException);
            }
        }
    }//GEN-LAST:event_clearDataButtonActionPerformed

    private void remainingDaysFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remainingDaysFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_remainingDaysFieldActionPerformed

    private void eventsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_eventsListValueChanged
        if (eventsList.getSelectedValue() != null) {
            showRemainingDays();
        }

    }//GEN-LAST:event_eventsListValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudsGUI.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudsGUI.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudsGUI.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudsGUI.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new StudsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aClock;
    private javax.swing.JTextField aDate;
    private javax.swing.JButton addEventButton;
    private javax.swing.JButton clearDataButton;
    private javax.swing.JLabel eTime;
    private m256gui.M256JList eventsList;
    private javax.swing.JTextField evtType;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField modCode;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTextArea quoteArea;
    private javax.swing.JTextField remainingDaysField;
    private javax.swing.JLabel reqTimeField;
    private javax.swing.JButton setTimeButton;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JTextField timeField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
